apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

version = project.appVersion

dependencies {
    implementation project(':core')
    implementation project(':model')
    implementation project(':test-utils')
    implementation project(':util')
    implementation project(':data')
    implementation project(':shared-resources')
    testImplementation project(':test-common')

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    implementation 'info.picocli:picocli:4.7.5'
    implementation 'net.datafaker:datafaker:2.0.2'
    implementation 'org.jdbi:jdbi3-core:3.49.5'
    implementation 'org.jdbi:jdbi3-sqlobject:3.49.5'
}

application {
    mainClass = 'app.notesr.cli.App'
    applicationName = 'notesr-cli'
}

shadowJar {
    archiveBaseName.set('notesr-cli')
    archiveVersion.set(project.version.toString())
    archiveClassifier.set('')

    manifest.attributes(
            'Main-Class': 'app.notesr.cli.App'
    )
}

tasks.named('jar') {
    enabled = false
}

tasks.register('copySharedResources', Copy) {
    from project(":shared-resources").file("src/test/resources")
    into layout.buildDirectory.dir("resources/test")
}

tasks.register("generateVersionProperties") {
    def outputDir = layout.buildDirectory.dir("generated-resources")

    outputs.dir outputDir
    doLast {
        def file = outputDir.get().file("version.properties").asFile
        file.parentFile.mkdirs()
        file.text = """
            utility.version=${project.appVersion}
            noteSr.version=${project.noteSrVersion}
        """.stripIndent().trim()
    }
}

tasks.named("processResources") {
    dependsOn("generateVersionProperties")
    from(layout.buildDirectory.dir("generated-resources")) {
        into "."
    }
}

processTestResources.dependsOn copySharedResources
build.dependsOn installDist